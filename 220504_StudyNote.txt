<2022.05.04일자 공부 기록>

1. 영단어 외우기
	obvious - 명백한, 분명한, 알기 쉬운
	obscure - 잘 알려지지 않은, 희미한, 이해하기 힘든
	obsession - 집착, 강박
	occasion - (특별한)경우, 때, 행사
	opportunity - 기회
	opposite - 반대의, 다른 쪽의, 맞은편의
	abnormal - 비정상적인
	absolute - 절대적인, 확실한
	absorb - 흡수하다
	abduction - 유괴, 납치
	advance - 전진하다, 나아가다
	advantage - 이점, 우위, 이익
	separate - 분리하다, 구분하다, 헤어지다
	secure - 안전한, 확실한
	select - 선택하다, 고르다
	segregate - 분리하다, 차별하다
	seclude - (다른 사람들로부터)고립시키다, 은둔하다
	severe - 엄격한, 심각한, 가혹한
	secret - 비밀, 비결
	synthesis - 종합, 통합, 합성
	synonym - 동의어, 유의어
	synchronize - 동시에 발생하다, 맞추다, 일치시키다
	symbiotic - 공생의, 공생하는
	benefit - 혜택, 이득
	beneficial - 유익한, 이로운
	benefactor - 후원자
	benediction - 축복, 축도


2. 학교 강의 필기
	<데이터 통신>

	- 다중화 예시(어떤 장소에 여러 사람이 모여 이야기를 한다고 가정)
		> FDM(주파수 분할 다중화)
		(모임 장소를 대화할 수 있는 작은 구역으로 나눠 구역별로 같은 언어로 대화)
		> TDM(시간 분할 다중화)
		(같은 언어를 사용하지만 사람마다 이야기하는 시간을 정해 할당된 시간에만 이야기)
		> CDM(코드 분할 다중화)
		(모든 사람이 같은 장소에서 서로 다른 언어로 이야기하는 것)
		-> 같은 언어를 사용하는 사람들끼리만 이해 가능하다.


	- 코드 분할 다중화(CDM)
		> 다수 사용자가 주파수와 시간을 공유
		> 각 사용자에게 서로 다른 코드(언어)를 부여하여 신호와 코드를 곱해서 전송한다.
		> 수신 시에는 송신 시 사용한 코드와 동일한 코드를 곱하여 원래의 신호를 복구함.
		> 대역 확산을 이용, 전송하려는 신호를 그 주파수 대역보다 훨씬 넓은 주파수 대역으로 확산시켜
		전송하는 방식
		> 넓은 주파수 대역에서 다수 사용자가 서로 다른 코드를 사용함으로써 동일한 주파수로 동시에 접속


	- 전송 제어
		> 회선 제어, 흐름 제어, 오류 제어
		> 회선 제어(누가 신호를 보낼 것인가?)
		> 흐름 제어(수신 쪽에서 데이터가 많진 않는가?)
		> 오류 제어(데이터를 보낸 대로 잘 받았는가? -> 오류 검출 및 정정)

		> 전송 제어의 필요성
		1) 프레임이라는 블록으로 전송된 데이터의 동기화 문제가 발생한다.
		2) 회선 구성 방식과 통신 방식에 따라 요구 사항들이 변한다.
		3) 송수신기 사이의 처리 속도에 따라 흐름 제어 필요
		4) 물리적 장치 간 오류 제어가 필요
		5) 다중점 통신에서 전송 대상 식별을 위해 주소 지정 필요
		6) 데이터 송수신의 개시, 유지 및 해제 등 장치들 간에 링크 관리가 필요


	- 경쟁 방식
		> 먼저 송신을 요구한 장치가 데이터를 전송할 권한을 갖는다.
		> 일단 두 장치 사이에 데이터링크가 설정되면 데이터 전송이 종료되기 전까지 링크를 독점 사용
		> 장점
		(간단, 위성 통신과 같이 전파 지연시간이 긴 경우에 유리)
		> 단점
		(회선을 점유한 장치가 실제로 데이터를 전송하지 않는 경우 회선 낭비)


	- 폴_셀렉션 방식
		> 다중점 회선 제어에서 사용되는 방식
		> 링크 하나에 주장치(모든 전송 수행) 1개와 종장치(식별 위해 주소 지정) 여러 개가 연결되어 있다.
		> 전송이 주장치에서 시작되면 주소는 수신 종장치의 주소가 되며, 종장치에서 전송이 시작되면
		주소는 발신 종장치의 주소가 된다.


	- 폴
		> 주장치가 종장치에게 보낼 데이터가 있는지를 물어보는 동작
		> 주장치에서 Poll을 각 종장치들에게 보내서 NAK(부정응답)을 받으면 다음 장치 확인,
		Data를 받으면 ACK 전송(전송할 데이터가 있을 경우)


	- 셀렉션
		> 주장치가 종장치에 보낼 데이터가 있을 때 사용된다.


	- 흐름 제어
		> 송신 장치와 수신 장치의 처리 속도가 다른 경우 데이터양이나 통신 속도가 수신 장치의 처리 능력을
		초과하지 않도록 조절하는 기능이다.
		> 수신 장치가 송신 장치보다 빠르면 문제가 되지 않지만, 느리면 수신 장치의 버퍼가 부족하여 데이터를 저장하지 못하고
		잃어버리는 상황이 발생한다.
		(이러한 문제 해결을 위한 기능이 흐름 제어)
		> Xon-Xoff 방식, RTS/CTS 방식, 정지-대기 방식, 슬라이딩 윈도 방식 등이 있다.


	- Xon/Xoff 방식
		ex) 컴퓨터와 프린터 간의 Xon/Xoff 방식
		-> 프린터의 처리 속도가 따라가지 못할 때 Xoff를 보내면 프린터의 버퍼가 가득 찼다는 의미이므로
		이 때 컴퓨터는 대기하고, 프린터로부터 Xon을 전송받으면 다시 데이터를 프린터로 보냄.

	
	- 정지-대기 방식
		> 송신 장치 A는 각 프레임을 전송하기 ACK(응답)를 수신할 때까지 기다린다.
		ACK를 받은 경우에만 다음 프레임을 전송할 수 있다.
		> 정해진 시간동안 ACK를 받지 못하면 현재 프레임 다시 전송
		> Data를 보내고 ACK를 받을 때까지 정지, 대기
		> EOT를 보내면 종료
		> 장점(간단), 단점(속도가 느리고 비효율적, ACK를 받아야 다음 프레임 전송하기에 링크 낭비)


	- 슬라이딩 윈도 방식
		> 송신 장치는 ACK를 받기 전까지 여러 개의 프레임을 전송할 수 있음.
		(회선의 효율적 이용)
		> 수신 장치는 여러 개의 데이터 프레임 수신에 대한 응답으로 하나의 ACK를 사용
		> 윈도 크기가 있음.(윈도 크기가 7이면 최대 7개까지 데이터 전송 가능, 무조건 한 번에 7개를 보내야 하는 것은 아님.)
		> 응답(ACK)을 얼마나 받았느냐에 따라 그 크기만큼 윈도 크기를 늘릴 수 있다.
		=> 확인 응답 없이 한 번에 윈도 크기만큼 프레임 전송 가능
		> 여러 개의 프레임을 전송하므로 전송 효율이 좋다.







