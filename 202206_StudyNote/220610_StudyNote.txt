<2022.06.10일자 공부 기록>

1. 영단어 복습
	navigate(항해하다, 길을 찾다), navy(해군, 남색의), naval(해군의, 해상의), nausea(메스꺼움, 구역질, 뱃멀미), nautical(선원의, 선박의, 해상의),
	negative(부정적인, 나쁜), negotiate(협상하다, 넘다, 성사시키다), negligent(부주의한, 무관심한, 소홀히 하는), neutral(중립적인, 공평한),
	deny(부인하다, 부정하다, 거부하다), nerve(신경, 용기, 뻔뻔스러움), nervous(긴장되는, 불안한), neurosis(신경증, 강박증, 노이로제),
	nominate(지명하다, 후보에 오르다), noun(명사, 명칭), norm(표준, 규범, 기준), normal(정상의, 일반적인), enormous(거대한, 엄청나게 큰),
	announce(발표하다, 알리다, 밝히다), denounce(공공연히, 비난하다, 비판하다), pronounce(발음하다, 표명하다, 선언하다),
	renounce(그만두다, 포기하다, 거절하다), novel(소설, 새로운, 신기한), novice(초심자, 풋내기), innovate(혁신하다, 도입하다), renovate(새롭게 하다, 개조하다),
	numerous(수많은, 다양한), numerable(셀 수 있는, 계산할 수 있는), anomie(사회적 무질서), nutrient(영양분, 영양소), nutrition(영양 섭취),
	nurse(간호사, 돌보다, 치료하다), nursery(탁아소, 놀이방, 묘목장), nurture(키우다, 기르다, 양성하다), nourish(영양분을 공급하다), 
	operate(운영하다, 작동하다, 수술하다), cooperate(협력하다, 협조하다), office(사무소, 회사, 공직), official(공무원, 관계자, 공식적인, 공무상의),
	optic(눈의, 시력의, 광학의), optical(시각적인), synopsis(개요, 요약, 줄거리), ordinary(보통의, 일상적인, 평범한), ordinance(법력, 조례, 규정),
	coordinary(조정하다, 꾸미다), subordinate(부하의, 하위의, 부수적인), organ(장기, 기관), organism(생물, 유기체), organize(조직하다, 구성하다, 준비하다),
	surgeon(외과 의사, 외과 전문의), energy(활기, 정력, 에너지), synergy(동반 상승, 시너지 효과), origin(기원, 태생, 시작), orient(동양, 향하다, 적응시키다),
	abort(유산시키다, 중단시키다), company(회사, 단체, 일행, 친구), companion(동반자, 동행), accompany(동행하다, 따르다, 수반하다), pantry(식료품 저장실, 저장소),
	paste(반죽, 붙이는 풀), pastel(파스텔, 파스텔화)


2. 학교 공부 필기
	<C++ 프로그래밍, 220610_CppStudy 코드 참고하여 공부하기>
	- 상속
		> 기존에 존재하는 유사한 클래스로부터 속성과 동작을 이어받고, 자신이 필요한 기능을 추가하는 기법
		> 상속을 통하여 기존 클래스의 필드와 메소드 재사용
		> 기존 클래스 일부 변경도 가능
		> 슈퍼(= 부모, 베이스) 클래스 -> 서브(= 자식, 파생된) 클래스
		> 자식 클래스들에서 중복되는 코드(함수 등)들을 슈퍼 클래스에 모으면 간편해진다.
		
	- 오버라이딩(재정의)
		> 자식 클래스가 필요에 따라 상속된 멤버 함수를 다시 정의하는 것.
		> 부모 클래스에서 재정의할 때 멤버 함수의 이름, 반환형, 매개 변수의 개수, 데이터 타입이 일치해야 함.
		> 오버로딩과의 차이점
		(오버로딩은 반환형은 고려 사항이 아니고, 매개 변수의 개수와 데이터 타입이 다른가 고려해야 하지만
		오버라이딩은 부모-자식 상속 관계에서의 재정의로 재정의할 함수와 완전히 일치해야 한다.)

	- 다중 상속
		> 한 클래스에 2개 이상의 부모 클래스를 상속받는 것.
		> 이 경우 부모 클래스들에서 똑같은 변수명/함수명이 있을 경우 자식 클래스에서 해당 변수/함수를 사용 시
		어떤 부모 클래스의 것을 사용했는지 모호해진다는 문제점이 있다.(오류가 남)





