<2022.04.24일자 공부 기록>

1. 영단어 외우기
	demolish - 철거하다, 무너뜨리다
	depreciate - (가치가)떨어지다
	desire - 욕구, 갈망, 바람, 바라다, 원하다
	despise - 경멸하다, 멸시하다
	decay - 부패하다, 퇴락하다, (치아가)썩다
	deform - 변형하다, 기형으로 만들다
	detach - 분리하다, 떼어내다, 떠나다
	delegate - 대표자, 위임하다, (대표를)뽑다
	default - 채무 불이행, 태만, 부족, 기본 값
	decode - 해독하다, 이해하다
	deforest - 삼림을 없애다, 벌채하다, 개간하다
	destruct - 파괴하다, 자폭시키다
	demerit - 단점, 결점, 약점
	disability - 무력, 무능, 신체장애
	disadvantage - 불리한 점, 결점
	discomfort - 불안, 불편
	disgrace - 불명예, 수치, 망신, 망신시키다
	dishonor - 불명예, 굴욕, 모욕
	disorder - 장애, (신체)질환, 무질서, 난동
	discourage - 낙담시키다, 좌절시키다
	discredit - 의심하다, 불신하다, 불신, 의혹
	disagree - 동의하지 않다, 의견을 달리하다, 맞지 않다
	disapprove - 반대하다, 못마땅해 하다
	discard - 버리다, 포기하다
	disconnect - 연락을 끊다, 분리하다
	dislike - 싫어하다, 싫어함, 싫어하는 것
	disobey - 위반하다, 거역하다
	disqualify - 실격시키다, 자격을 박탈하다
	disregard - (의견이나 제안을)무시하다, 묵살하다
	disrespect - 무례, 실례, 결례를 범하다, 경시하다
	dishonest - 부정직한, 불성실한, 눈속임의
	discontent - 불평, 불만, 불평을 품은, 불만스러운


2. 학교 시험 대비 공부
	<파이썬 프로그래밍>
	
	- 파이썬의 특징(장, 단점)
		1) 장점
		> 상대적으로 배우기 쉬움.
		> 무료 오픈소스로, 강력한 기능을 제공한다.
		> 강력, 다양한 외부 라이브러리가 제공된다.
		> 강력한 웹 개발환경을 지원한다.
		> 사용이 용이하다.

		2) 단점
		> 모바일 컴퓨팅 분야의 지원이 약하다.
		> 다른 언어에 비해 상대적으로 실행 속도가 느리다.(스크립트 언어)
		> 하드웨어의 제어가 쉽지 않다.

	
	- !pip list 명령어
		> 현재 환경에서 어떤 라이브러리가 있는지 보여준다.


	- 변수, 상수의 개념
		> 상수 : 문자, 문자열, 정수형, 실수형과 같은 형태의 상수(변하지 않는 값)
		> 위와 같은 값을 담는 공간이 변수이다.
		> 변수, 상수의 데이터 타입 알기(type(변수 또는 상수))
		> 변수 혹은 상수의 데이터 타입을 알 수 있는 명령어 -> type(변수, 상수명)
		> %whos 명령어 : 지금까지 선언된 변수들의 목록을 보여준다.
		> 문자열은 '', "", """""" 3가지 형태로 표현이 가능하다.


	- 연산자 기호들
		> +(덧셈), -(뺄셈), *(곱셈), /(나눗셈), //(몫), %(나머지), **(거듭제곱)

	
	- 변수명 제약조건
		> 숫자로 시작하면 안 된다.
		> 파이썬에서 사용하고 있는 예약어는 사용하면 안 된다.(if, as 등....)
		> 특수 기호(+, -, * 등....)가 들어가면 안 된다.
		> _ 가 사용될 수 있다.


	- input() 함수
		> 사용자로부터 입력을 받을 수 있는 함수
		> 기본 반환값의 데이터형은 문자열(str) 형태로, 입력받는 상황에 따라 데이터형을 변경시켜서 반환해야 한다.
		ex) num = int(input("숫자 입력 : "));
		-> 숫자를 입력받는 상황이니 정수형으로 데이터형을 변경하는 int() 함수를 사용하는 모습이다.


	- 다양한 print() 출력 방법
		> print(문자열, 문자열);
		(따옴표(,)로 출력할 데이터 사이를 구분)
		> print("%s %d"%(문자열, 정수));
		(% 서식 지정, C언어의 printf 서식 지정과 사용 형태가 비슷하다.)
		> print("{0}, {1}".format(데이터, 데이터));
		(파이썬에서의 format 형식 지정 출력)

	
	- 문자열 슬라이싱
		ex) str[i:j:k];
		> i는 시작값, j는 끝값 - 1, k는 건너뛸 값을 뜻한다.
		> 예를 들어 위의 예시에서 str[1:8:3] 으로 문자열을 슬라이싱하게 되면,
		str 문자열의 인덱스 1부터 인덱스 7까지(끝값 - 1) 3칸씩 건너뛰며 출력하게 되니 인덱스 1, 4, 7 번째 문자가 출력될 것이다.


	- 리스트 관련 함수들
		1) append 함수
			리스트의 끝에 데이터를 추가하는 함수
			ex) list = [1, 2, 3, 4];
			list.append("Hello");
			-> list의 끝에 "Hello" 라는 문자열 데이터를 추가하니 list는 [1, 2, 3, 4, "Hello"] 가 될 것이다.
			append로 리스트를 추가할 수도 있음
			ex) list1.append(list2) -> list1 뒤에 list2 데이터가 붙은 형식으로 바뀌고 list2는 그대로.

		2) insert 함수
			리스트의 특정 위치에 데이터를 추가할 수 있는 함수
			ex) list = ['a', 'b', 'c', 'e', 'f'];
			list.insert(3, 'd');
			-> list의 3 인덱스 위치에 'd' 데이터를 추가하면, 원래 3의 위치인 'e' 자리에 'd' 데이터가 들어가게 되고
			뒤의 데이터들은 한 칸씩 뒤로 밀려 list는 ['a', 'b', 'c', 'd', 'e', 'f'] 형태가 될 것이다.

		3) 정렬 함수
			list.sort();
			-> 리스트를 오름차순(숫자, 알파벳 등을 기준)으로 정렬해 줌.
			list.sort(reverse=True);
			-> 리스트를 내림차순(숫자, 알파벳 등을 기준)으로 정렬해 줌.
			list.reverse();
			-> 리스트를 특정 규칙(오름차순, 내림차순 등)으로 정렬하는 것이 아닌 리스트의 요소 자체를 거꾸로 뒤집는다.
			
		4) 리스트 삭제 관련 함수들
			> del(list[특정 인덱스]);
			del 함수 안에 리스트의 특정 인덱스를 넣으면 해당 인덱스가 삭제된다.
			만약 del 함수 안에 특정 인덱스를 표시하지 않고 리스트명만 넣게 되면 해당 리스트가 삭제된다.

			> list.remove(특정 값)
			리스트에서 특정 값을 찾아서 해당 값을 삭제한다.
			만약 리스트에 특정 값이 없으면 오류를 반환하게 되고, 리스트에서 특정 값이 여러 개 존재하면 그 중
			앞의 인덱스 위치에 있는 값이 삭제되게 된다.
			ex) list = [10, 20, 30];
			list.insert(2, 10);
			list.remove(10);
			-> list의 변화 과정은 처음 insert를 하면 2 위치에 10을 넣으니 [10, 20, 10, 30]이 되고, 다음으로 remove로 10 값을 삭제하면
			10 값이 리스트에 2개가 존재하니 보다 앞에 위치한 0 인덱스의 10이 삭제되게 된다.
			그러므로 위 예제에서 list의 결과는 [20, 10, 30] 이 된다.

			> list.clear();
			해당 리스트의 내용을 전부 삭제한다.
			위의 del 함수에서 리스트명을 넣어서 리스트를 삭제하는 것과의 차이점은 del 함수는 해당 리스트 자체가 삭제되어 사라지지만,
			clear 함수는 해당 리스트의 내용들만 전부 삭제되고 리스트는 빈 리스트로 남게 된다.

		5) list.pop();
			리스트에서 마지막 요소를 반환한 후 해당 요소는 삭제되게 된다.













