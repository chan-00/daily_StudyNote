<2022.04.07일자 공부 기록>

1. 영단어 외우기
	testify - 증언[증명]하다, 진술하다
	attest - 증명하다, 입증하다
	contest - 대회, 경쟁
	detest - 몹시 싫어하다, 혐오하다
	protest - 항의, 시위
	text - 본문, 글, 원문, 문자 메시지를 보내다
	texture - 감촉, 질감
	textile - 직물, 옷감, 섬유 산업
	context - 정황, 맥락, 문맥
	pretext - 구실, 핑계
	atom - 원자
	anatomy - 해부, 해부학, 분석[분해]
	tone - 어조[말투], 색, 분위기
	intonation - 억양
	monotonous - 단조로운
	tune - 곡조, 선율, 음을 맞추다, 조율하다
	torture - 고문, 고통, 고문하다, 괴롭히다
	distort - 비틀다, 왜곡하다
	extort - 갈취하다
	retort - 반박하다, 쏘아붙이다
	torment - 고통, 고뇌, 고민거리, 고통을 안겨주다
	torque - 비트는 힘, 회전력, <단위> 토크
	torch - 횃불, 성화
	attribute - ~의 탓으로 하다, ~에 돌리다, 특성, 속성
	contribute - 기부[기여]하다, 공헌하다
	distribute - 분배하다, 배포하다, 유통하다


2. 학교 강의 정리
	<22.04.07자 데이터베이스 강의 내용>
	
	- 관계 데이터 모델
		> 하나의 개체에 관한 데이터를 릴레이션 하나에 담아 데이터베이스에 저장
		> 속성 : 릴레이션의 열을 뜻함, 애트리뷰트(attribute)라고도 불리며 파일의 필드에 대응되는 개념이다.
		-> 속성의 개수를 차수(degree)라고 함, 차수는 정적인 특징(값이 잘 변하지 않음)
		> 튜플 : 릴레이션의 행을 뜻함, 파일에서 레코드에 대응되는 개념.
		-> 튜플의 개수를 카디널리티라고 함, 카디널리티는 동적인 특징(값이 자주 변함)
		> 도메인 : 속성 하나가 가질 수 있는 모든 값의 집합(ex : A 속성은 int값, B 속성은 CHAR(10) 값 등....)
		> 널 값 : 릴레이션의 특정 튜플 속성값을 모르거나, 적합한 값이 없는 경우, 숫자 0이나 공백 문자와는 다름.
		> 릴레이션 스키마 : 릴레이션의 논리적 구조, 릴레이션에 있는 모든 속성의 이름 집합을 나타내는 말이다.(정적인 특징)
		-> 릴레이션 내포라고도 부름.
		> 릴레이션 인스턴스 : 어느 한 시점에서 릴레이션의 튜플 집합을 말함, 동적인 특징
		-> 릴레이션 외연이라고도 부름.
	=> 여러 릴레이션 스키마들이 모인 것을 데이터베이스 스키마, 여러 릴레이션의 인스턴스들의 집합을 데이터베이스 인스턴스라 함.

	- 릴레이션의 특징(☆)
		> 튜플의 유일성
		(하나의 릴레이션에는 동일한 튜플이 존재할 수 없다.)
		> 튜플의 무순서
		(하나의 릴레이션에서 튜플 사이의 순서는 무의미하다.)
		> 속성의 무순서
		(하나의 릴레이션에서 속성 사이의 순서는 무의미하다.)
		> 속성의 원자성
		(속성 값으로 원자 값만 사용할 수 있다. -> 하나의 속성은 다중 값을 가질 수 없다.)

	- 키의 종류(☆☆)
		> 슈퍼키, 후보키, 기본키, 대체키, 외래키 5개가 있다.
		> 슈퍼키
		(유일성의 특성을 만족하는 속성들을 말함, 슈퍼키 속성은 튜플마다 중복값이 있으면 안됨.)

		> 후보키
		(유일성과 최소성을 만족하는 속성들, 여기서 최소성이란 꼭 필요한 최소한의 속성들로만 키를 구성하는 것을 말함.)
		ex) 슈퍼키에 (고객아이디), (고객이름, 주소), (고객아이디, 고객이름) 이 있다면 여기서 후보키는 (고객아이디), (고객이름, 주소)가 된다.
		왜냐하면 (고객아이디)는 하나의 속성만 있으므로 최소성을 만족하고, (고객이름, 주소)는 고객이름과 주소를 하나씩 없다고 가정하고 봤을 때
		유일성이 만족되지 않으므로 서로가 있어야 유일성이 만족되게 됨. -> (고객이름, 주소)도 후보키가 될 수 있다.
		(고객아이디, 고객이름)은 후보키가 될 수 없는 이유는 고객이름이 없다고 가정했을 때 고객아이디만으로도 유일성이 만족되기 때문에
		후보키가 될 수 없는 것이다.

		> 기본키(☆☆)
		(여러 후보키 중 기본키의 선택 사항을 고려하여 하나를 선택하게 됨.)
		1) 널 값을 가질 수 있는 속성이 포함된 후보키는 기본키로 부적합.
		2) 값이 자주 변경될 수 있는 속성은 기본키로 부적합
		3) 단순한 후보키를 기본키로 선택.
		위의 예시의 후보키들 중 위의 선택 사항을 고려하여 기본키를 하나 고르자면 (고객아이디)가 기본키가 될 수 있다.

		> 대체키
		(후보키들 중 기본키로 선택되지 못하고 남은 후보키들을 말함.)
		
		> 외래키(☆)
		(다른 릴레이션의 기본키를 참조하는 속성을 말함, 릴레이션 간의 관계를 나타내는 역할로 중요하다.)
		-> 하나의 릴레이션에 여러 외래키 존재 가능, 외래키를 기본키로 사용 가능, 같은 릴레이션에 해당 릴레이션의 기본키를 참조하는
		외래키 존재 가능

	- 관계 데이터 모델의 제약
		> 개체 무결성 제약 조건(기본키와 관련)
		(기본키를 구성하는 모든 속성은 널 값을 가질 수 없다.
		> 참조 무결성 제약 조건(외래키와 관련)
		(외래키는 참조할 수 없는 값을 가질 수 없다. -> 참조하는 기본키에 없는 값은 가질 수 없음.)
		+ 외래키에 NULL 값이 들어가도 참조 무결성 제약조건을 위반한 것을 판단하면 안됨.

	
	