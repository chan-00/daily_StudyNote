<2022.04.08일자 공부 기록>

1. 영단어 외우기
	true - 참된, 진실의
	trust - 신뢰, 신탁, 신뢰하다
	trustworthy - 신뢰할 수 있는
	entrust - 맡기다, 위임하다
	distrust - 불신, 불신하다, 의심하다
	tumor - 종양
	tumult - (마음의)소란, 심란함, 혼란스러움
	tomb - 무덤, 묘
	thumb - 엄지손가락
	turbulence - 격동, 난기류
	turbine - (기계의)터빈
	disturb - 방해하다, 불안하게 만들다
	trouble - 문제, 골칫거리, 괴롭히다
	use - 쓰다, 사용하다, 사용(법), 용도
	abuse - 남용, 오용, 학대, 남용하다, 학대하다
	misuse - 남용, 악용, 혹사, 남용하다, 학대하다
	utilize - 활용하다, (충분히) 이용하다
	utensil - 기구, 도구
	vacate - 비우다, 떠나다
	vacuum - 진공, 진공청소하다
	evacuate - 대피하다, 떠나다
	vanish - 갑자기 사라지다, 없어지다
	vain - 헛된, 소용없는, 공허한
	invade - 침입하다, 난입하다
	evade - 피하다, 모면하다
	pervade - 만연하다
	value - 가치, 소중하게 여기다, 평가하다
	valid - 유효한, 타당한
	valor - 용기, 용맹
	ambivalent - 상반되는 감정일 지닌, 양면적인
	evaluate - 평가하다
	available - 이용할 수 있는, 유효한
	prevail - 만연하다, 승리하다


2. 학교 공부 필기
	<알고리즘 강의 필기>

	- 기본 정렬
	(버블 정렬, 삽입 정렬, 선택 정렬)
	-> 합병, 힙, 퀵 정렬은 위의 정렬보다 시간 복잡도 단축.

	- 병합/합병 정렬(Merge Sort)
		> 제자리 알고리즘X(추가의 공간을 필요로 함)
		> 배열을 두 개로 쪼개어 정렬, 다시 병합하는 작업을 반복
		> 분할 정복 방법
		(주어진 복잡하고 큰 문제의 해를 구하기 위해 작게 나눠 정복, 합치기)
		

	- 퀵 정렬
		> 적절한 원소를 기준(pivot)으로 작은 것, 큰 것으로 나눔.
		(나눈 부분에서 다시 기준을 잡고 정렬 -> 각 크기가 1이 될 때까지 분할.)
		> 분할 정복 방법
		> 안정적 알고리즘(기준값은 위치가 한 번 정해지면 값이 바뀌지 않음)
		> 제자리 알고리즘(추가적인 공간을 필요로 하지 않는다.)
	
	- 병합 정렬은 기준점을 전체 길이의 중간으로 잡음.(값X, 위치 기준)
	  퀵 정렬은 어떤 값을 기준점으로 함.(값 기준)


	<운영체제 강의 필기>
		
	1) ls -l
		> 디렉토리의 권한, 속성, 생성 날짜 등을 보여줌

	2) ls -al
		> a 옵션은 숨겨져 있는 리스트까지 모두 보여줌(all)
		> .(점 하나) = root 위치를 의미
		> ..(점 두 개) = 현재 위치의 바로 상위 디렉토리를 의미

	3) ex : root에서 kbs 디렉토리 만들고, 그 안에 mbc, sbs 디렉토리 만들기(mkdir 명령어)
		~# mkdir kbs
		~/kbs# mkdir mbc
		~/kbs# mkdir sbs

	4) ls -l (경로값)
		> 경로에 있는 디렉토리들을 보여줌.
		(경로값은 현재위치 기준 상대경로 or 절대경로)

	5) pwd 명령어
		> 현재 위치의 경로값을 보여줌.

	6) touch (파일명)
		> 빈 내용의 파일을 생성
		> 파일명 자리에 파일을 생성하고 싶은 위치의 경로값을 함께 쓰면 해당 경로에 빈 파일이 생성된다.
		ex) touch abc.txt
		-> 현 위치에 abc.txt 파일 생성
		ex) touch ../../abc.txt
		-> 현 위치의 2단계 상위 디렉토리에 abc.txt 파일 생성

	7) 위에서 touch로 만든 파일에 내용 작성 시 vi로 작성.
		ex) vi abc.txt

	8) cp (복사할 파일 경로) (복사 위치 경로값)

	9) rm 명령어(파일 삭제)
		ex) 현재 위치의 상위 디렉토리의 sbs라는 디렉토리 안의 abc.txt 파일 삭제하기
		-> rm ../sbs/abc.txt

	10) mv 명령어(파일 또는 디렉토리 이동)
		> 이름을 바꿀 때도 mv 명령어를 사용한다.
		ex) mv sys.txt system.txt
		(현재 위치의 sys.txt 파일을 system.txt로 이름을 바꿈.)

	11) cat 명령어(수정X, 화면상으로 파일의 내용 확인)
		ex) cat system.txt

	12) more 명령어
		> cat처럼 화면상으로 파일 내용 확인하지만 한 페이지씩 내용 끊어서 확인함.(cat은 파일 내용 한번에 전부 나옴)

	13) head 명령어
		> 파일 내용을 위에서 10줄만 보여줌.
		ex) 위에서 5줄만 보고 싶으면?
		-> head -5 system.txt

	14) tail 명령어
		> head와 반대로 뒤에서부터 10줄 보여줌.
		> head와 마찬가지로 5줄만 보고 싶으면? -> (tail -5 system.txt)

	15) rmdir 명령어(디렉토리 삭제)
		> 지우고자 하는 디렉토리 안의 내용이 있으면 지워지지 않는다.
		
	16) 그럼 안에 내용이 있는 디렉토리를 삭제할 때에는?
	-> rm -r kbs(rm의 r 옵션 사용하면 안에 내용이 있든 없든 삭제함.)
	-> rm -ir kbs(r 옵션만 사용하면 바로 삭제되지만 i 옵션을 붙여 사용하면 안의 내용들 삭제할 것인지 물어봄)

	17) mv 명령어
		> 파일, 디렉토리 이동 명령어
		> 이름을 바꿀 때에도 mv 명령어가 활용된다.
		ex) 현 위치의 sys.txt 파일 이름을 system.txt로 변경하고 싶다면?
		-> mv sys.txt system.txt

	18) 파일의 내용을 볼 수 있는 명령어들
		> cat(파일 전체 내용)
		> more(파일 내용을 한 페이지씩 끊어서 확인)
		> head(파일 내용의 위쪽 10줄만 보여줌, 옵션으로 몇 줄을 보여줄지 바꿀 수 있음.)
		> tail(head와 반대로 파일 내용의 아래쪽에서 10줄을 보여줌, 마찬가지로 옵션으로 몇 줄을 보여줄지 바꾸기 가능.)
		
	19) less 명령어(vi 에디터 형태로 파일의 내용 보는 명령어)
		> pageup, pagedown(키보드 키) 키를 눌러 페이지 단위로 확인 가능.
		> vi 에디터와 마찬가지로 :에 q 입력하면 종료.

	20) clear 명령어(화면의 내용을 다 지워 주는 명령어, 터미널 화면이 지저분할 때 활용 가능.)








